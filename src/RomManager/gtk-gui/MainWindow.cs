
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.VBox vboxMain;

	private global::Gtk.Label labelFileMain;

	private global::Gtk.FileChooserButton filechooserMain;

	private global::Gtk.Frame frameActions;

	private global::Gtk.Alignment GtkAlignmentActions;

	private global::Gtk.VBox vboxActions;

	private global::Gtk.RadioButton radiobuttonAddFromCsv;

	private global::Gtk.RadioButton radiobuttonRemoveFromCsv;

	private global::Gtk.RadioButton radiobuttonAddFiles;

	private global::Gtk.RadioButton radiobuttonRemove;

	private global::Gtk.Label labelAction;

	private global::Gtk.Button buttonProcess;

	private global::Gtk.FileChooserButton filechooserSecondary;

	private global::Gtk.Label labelFileSecondary;

	protected virtual void Build()
	{
		global::Stetic.Gui.Initialize(this);
		// Widget MainWindow
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString("MAME Rom Manager");
		this.Icon = global::Stetic.IconLoader.LoadIcon(this, "gtk-execute", global::Gtk.IconSize.Menu);
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vboxMain = new global::Gtk.VBox();
		this.vboxMain.Name = "vboxMain";
		this.vboxMain.Spacing = 6;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.labelFileMain = new global::Gtk.Label();
		this.labelFileMain.Name = "labelFileMain";
		this.labelFileMain.Xalign = 0F;
		this.labelFileMain.LabelProp = global::Mono.Unix.Catalog.GetString("Select the CSV file to process");
		this.vboxMain.Add(this.labelFileMain);
		global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vboxMain[this.labelFileMain]));
		w1.Position = 0;
		w1.Expand = false;
		w1.Fill = false;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.filechooserMain = new global::Gtk.FileChooserButton(global::Mono.Unix.Catalog.GetString("Select a File"), ((global::Gtk.FileChooserAction)(0)));
		this.filechooserMain.Name = "filechooserMain";
		this.vboxMain.Add(this.filechooserMain);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vboxMain[this.filechooserMain]));
		w2.Position = 1;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.frameActions = new global::Gtk.Frame();
		this.frameActions.Name = "frameActions";
		this.frameActions.ShadowType = ((global::Gtk.ShadowType)(0));
		// Container child frameActions.Gtk.Container+ContainerChild
		this.GtkAlignmentActions = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
		this.GtkAlignmentActions.Name = "GtkAlignmentActions";
		this.GtkAlignmentActions.LeftPadding = ((uint)(12));
		// Container child GtkAlignmentActions.Gtk.Container+ContainerChild
		this.vboxActions = new global::Gtk.VBox();
		this.vboxActions.Name = "vboxActions";
		this.vboxActions.Spacing = 6;
		// Container child vboxActions.Gtk.Box+BoxChild
		this.radiobuttonAddFromCsv = new global::Gtk.RadioButton(global::Mono.Unix.Catalog.GetString("Add roms from another CSV file"));
		this.radiobuttonAddFromCsv.CanFocus = true;
		this.radiobuttonAddFromCsv.Name = "radiobuttonAddFromCsv";
		this.radiobuttonAddFromCsv.DrawIndicator = true;
		this.radiobuttonAddFromCsv.UseUnderline = true;
		this.radiobuttonAddFromCsv.Group = new global::GLib.SList(global::System.IntPtr.Zero);
		this.vboxActions.Add(this.radiobuttonAddFromCsv);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vboxActions[this.radiobuttonAddFromCsv]));
		w3.Position = 0;
		w3.Expand = false;
		w3.Fill = false;
		// Container child vboxActions.Gtk.Box+BoxChild
		this.radiobuttonRemoveFromCsv = new global::Gtk.RadioButton(global::Mono.Unix.Catalog.GetString("Remove roms from another CSV file"));
		this.radiobuttonRemoveFromCsv.CanFocus = true;
		this.radiobuttonRemoveFromCsv.Name = "radiobuttonRemoveFromCsv";
		this.radiobuttonRemoveFromCsv.DrawIndicator = true;
		this.radiobuttonRemoveFromCsv.UseUnderline = true;
		this.radiobuttonRemoveFromCsv.Group = this.radiobuttonAddFromCsv.Group;
		this.vboxActions.Add(this.radiobuttonRemoveFromCsv);
		global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vboxActions[this.radiobuttonRemoveFromCsv]));
		w4.Position = 1;
		w4.Expand = false;
		w4.Fill = false;
		// Container child vboxActions.Gtk.Box+BoxChild
		this.radiobuttonAddFiles = new global::Gtk.RadioButton(global::Mono.Unix.Catalog.GetString("Add files from a complete romset into a selection folder"));
		this.radiobuttonAddFiles.CanFocus = true;
		this.radiobuttonAddFiles.Name = "radiobuttonAddFiles";
		this.radiobuttonAddFiles.DrawIndicator = true;
		this.radiobuttonAddFiles.UseUnderline = true;
		this.radiobuttonAddFiles.Group = this.radiobuttonAddFromCsv.Group;
		this.vboxActions.Add(this.radiobuttonAddFiles);
		global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vboxActions[this.radiobuttonAddFiles]));
		w5.Position = 2;
		w5.Expand = false;
		w5.Fill = false;
		// Container child vboxActions.Gtk.Box+BoxChild
		this.radiobuttonRemove = new global::Gtk.RadioButton(global::Mono.Unix.Catalog.GetString("Remove unlisted files from a folder"));
		this.radiobuttonRemove.CanFocus = true;
		this.radiobuttonRemove.Name = "radiobuttonRemove";
		this.radiobuttonRemove.DrawIndicator = true;
		this.radiobuttonRemove.UseUnderline = true;
		this.radiobuttonRemove.Group = this.radiobuttonAddFromCsv.Group;
		this.vboxActions.Add(this.radiobuttonRemove);
		global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vboxActions[this.radiobuttonRemove]));
		w6.Position = 3;
		w6.Expand = false;
		w6.Fill = false;
		this.GtkAlignmentActions.Add(this.vboxActions);
		this.frameActions.Add(this.GtkAlignmentActions);
		this.labelAction = new global::Gtk.Label();
		this.labelAction.Name = "labelAction";
		this.labelAction.LabelProp = global::Mono.Unix.Catalog.GetString("Action with the file:");
		this.labelAction.UseMarkup = true;
		this.frameActions.LabelWidget = this.labelAction;
		this.vboxMain.Add(this.frameActions);
		global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vboxMain[this.frameActions]));
		w9.Position = 2;
		w9.Expand = false;
		w9.Fill = false;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.buttonProcess = new global::Gtk.Button();
		this.buttonProcess.CanFocus = true;
		this.buttonProcess.Name = "buttonProcess";
		this.buttonProcess.UseUnderline = true;
		this.buttonProcess.Label = global::Mono.Unix.Catalog.GetString("_Valider");
		global::Gtk.Image w10 = new global::Gtk.Image();
		w10.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-apply", global::Gtk.IconSize.Menu);
		this.buttonProcess.Image = w10;
		this.vboxMain.Add(this.buttonProcess);
		global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vboxMain[this.buttonProcess]));
		w11.PackType = ((global::Gtk.PackType)(1));
		w11.Position = 3;
		w11.Expand = false;
		w11.Fill = false;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.filechooserSecondary = new global::Gtk.FileChooserButton(global::Mono.Unix.Catalog.GetString("Select a File"), ((global::Gtk.FileChooserAction)(0)));
		this.filechooserSecondary.Name = "filechooserSecondary";
		this.vboxMain.Add(this.filechooserSecondary);
		global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.vboxMain[this.filechooserSecondary]));
		w12.PackType = ((global::Gtk.PackType)(1));
		w12.Position = 4;
		w12.Expand = false;
		w12.Fill = false;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.labelFileSecondary = new global::Gtk.Label();
		this.labelFileSecondary.Name = "labelFileSecondary";
		this.labelFileSecondary.Xalign = 0F;
		this.labelFileSecondary.LabelProp = global::Mono.Unix.Catalog.GetString("CSV file to merge");
		this.vboxMain.Add(this.labelFileSecondary);
		global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.vboxMain[this.labelFileSecondary]));
		w13.PackType = ((global::Gtk.PackType)(1));
		w13.Position = 5;
		w13.Expand = false;
		w13.Fill = false;
		this.Add(this.vboxMain);
		if ((this.Child != null))
		{
			this.Child.ShowAll();
		}
		this.DefaultWidth = 686;
		this.DefaultHeight = 303;
		this.Show();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler(this.OnDeleteEvent);
		this.buttonProcess.Clicked += new global::System.EventHandler(this.ButtonProcess_Clicked);
	}
}
